[
  {
    "params": [],
    "annotation": {
      "global": true
    },
    "desc": "注册控件。",
    "name": "code_edit_register",
    "return": {
      "type": "ret_t",
      "desc": "返回RET_OK表示成功，否则表示失败。"
    },
    "type": "method",
    "header": "src/code_edit_register.h",
    "level": 1
  },
  {
    "params": [],
    "annotation": {
      "global": true
    },
    "desc": "获取支持的渲染模式。",
    "name": "code_edit_supported_render_mode",
    "return": {
      "type": "const char*",
      "desc": "返回渲染模式。"
    },
    "type": "method",
    "header": "src/code_edit_register.h",
    "level": 1
  },
  {
    "type": "class",
    "methods": [
      {
        "params": [
          {
            "type": "code_theme_t*",
            "name": "theme",
            "desc": "theme对象"
          },
          {
            "type": "code_theme_on_word_style_t",
            "name": "on_word_style",
            "desc": "回调函数。"
          },
          {
            "type": "code_theme_on_widget_style_t",
            "name": "on_widget_style",
            "desc": "回调函数。"
          },
          {
            "type": "void*",
            "name": "ctx",
            "desc": "回调函数上下文。"
          },
          {
            "type": "const char*",
            "name": "lang",
            "desc": "语言。"
          }
        ],
        "annotation": {},
        "desc": "初始化。",
        "name": "code_theme_init",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "code_theme_t*",
            "name": "theme",
            "desc": "theme对象"
          },
          {
            "type": "const char*",
            "name": "data",
            "desc": "数据。"
          },
          {
            "type": "uint32_t",
            "name": "size",
            "desc": "数据长度。"
          }
        ],
        "annotation": {},
        "desc": "加载。",
        "name": "code_theme_load",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "code_theme_t*",
            "name": "theme",
            "desc": "theme对象"
          }
        ],
        "annotation": {},
        "desc": "~初始化。",
        "name": "code_theme_deinit",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      }
    ],
    "events": [],
    "properties": [],
    "header": "code_edit/code_theme.h",
    "desc": "",
    "name": "code_theme_t",
    "level": 1
  },
  {
    "type": "class",
    "methods": [
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "parent",
            "desc": "父控件"
          },
          {
            "type": "xy_t",
            "name": "x",
            "desc": "x坐标"
          },
          {
            "type": "xy_t",
            "name": "y",
            "desc": "y坐标"
          },
          {
            "type": "wh_t",
            "name": "w",
            "desc": "宽度"
          },
          {
            "type": "wh_t",
            "name": "h",
            "desc": "高度"
          }
        ],
        "annotation": {
          "constructor": true,
          "scriptable": true
        },
        "desc": "创建code_edit对象",
        "name": "code_edit_create",
        "return": {
          "type": "widget_t*",
          "desc": "code_edit对象。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "code_edit对象。"
          }
        ],
        "annotation": {
          "cast": true,
          "scriptable": true
        },
        "desc": "转换为code_edit对象(供脚本语言使用)。",
        "name": "code_edit_cast",
        "return": {
          "type": "widget_t*",
          "desc": "code_edit对象。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "const char*",
            "name": "lang",
            "desc": "当前的代码的语言。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 当前的代码的语言。",
        "name": "code_edit_set_lang",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "const char*",
            "name": "code_theme",
            "desc": "当前的代码的语言。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 当前的代码的主题。",
        "name": "code_edit_set_code_theme",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "const char*",
            "name": "filename",
            "desc": "文件名。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 文件名。",
        "name": "code_edit_set_filename",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "bool_t",
            "name": "show_line_number",
            "desc": "是否显示行号。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 是否显示行号。",
        "name": "code_edit_set_show_line_number",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "bool_t",
            "name": "readonly",
            "desc": "是否显示行号。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 是否显示行号。",
        "name": "code_edit_set_readonly",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "uint32_t",
            "name": "tab_width",
            "desc": "tab的宽度。。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 tab的宽度。",
        "name": "code_edit_set_tab_width",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "int32_t",
            "name": "zoom",
            "desc": "缩放等级。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 缩放等级。",
        "name": "code_edit_set_zoom",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "bool_t",
            "name": "wrap_word",
            "desc": "是否自动折行。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 是否自动折行。",
        "name": "code_edit_set_wrap_word",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "int32_t",
            "name": "scroll_line",
            "desc": "滚动行数。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 滚动速度。",
        "name": "code_edit_set_scroll_line",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "uint32_t",
            "name": "offset",
            "desc": "插入的偏移位置。"
          },
          {
            "type": "const char*",
            "name": "text",
            "desc": "待插入的文本。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "插入一段文本。",
        "name": "code_edit_insert_text",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "重做。",
        "name": "code_edit_redo",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "撤销。",
        "name": "code_edit_undo",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "拷贝选中的文本。",
        "name": "code_edit_copy",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "剪切。",
        "name": "code_edit_cut",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "粘贴。",
        "name": "code_edit_paste",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "清除内容。",
        "name": "code_edit_clear",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "清除所有内容。",
        "name": "code_edit_clear_all",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "取消选择。",
        "name": "code_edit_select_none",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "全选。",
        "name": "code_edit_select_all",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "检查是否可以重做。",
        "name": "code_edit_can_redo",
        "return": {
          "type": "bool_t",
          "desc": "返回TRUE表示能，否则表示不能。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "检查是否可以撤销。",
        "name": "code_edit_can_undo",
        "return": {
          "type": "bool_t",
          "desc": "返回TRUE表示能，否则表示不能。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "检查是否可以拷贝。",
        "name": "code_edit_can_copy",
        "return": {
          "type": "bool_t",
          "desc": "返回TRUE表示能，否则表示不能。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "检查是否可以剪切。",
        "name": "code_edit_can_cut",
        "return": {
          "type": "bool_t",
          "desc": "返回TRUE表示能，否则表示不能。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "检查是否可以粘贴。",
        "name": "code_edit_can_paste",
        "return": {
          "type": "bool_t",
          "desc": "返回TRUE表示能，否则表示不能。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "const char*",
            "name": "filename",
            "desc": "文件名。"
          },
          {
            "type": "bool_t",
            "name": "with_utf8_bom",
            "desc": "bom"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "save",
        "name": "code_edit_save",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "const char*",
            "name": "filename",
            "desc": "文件名。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "load",
        "name": "code_edit_load",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "检查文档是否变化。",
        "name": "code_edit_is_modified",
        "return": {
          "type": "bool_t",
          "desc": "返回TRUE表示是，否则表示否。"
        }
      }
    ],
    "events": [],
    "properties": [
      {
        "name": "lang",
        "desc": "当前的代码的语言。",
        "type": "char*",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "code_theme",
        "desc": "当前的代码的主题名称(在资源的xml目录必须有相应的xml文件存在，格式与nodepad++的一致)。",
        "type": "char*",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "filename",
        "desc": "文件名。",
        "type": "char*",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "show_line_number",
        "desc": "是否显示行号。",
        "type": "bool_t",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "readonly",
        "desc": "是否显示行号。",
        "type": "bool_t",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "wrap_word",
        "desc": "是否自动折行。",
        "type": "bool_t",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "tab_width",
        "desc": "tab的宽度。",
        "type": "uint32_t",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "scroll_line",
        "desc": "鼠标一次滚动行数。",
        "type": "int32_t",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "zoom",
        "desc": "缩放等级。",
        "type": "int32_t",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      }
    ],
    "header": "code_edit/code_edit.h",
    "desc": "代码编辑器控件。\n\n在xml中使用\"code\\_edit\"标签创建代码编辑器控件。如：\n\n```xml\n<!-- ui -->\n<code_edit name=\"code_edit\" x=\"10\" y=\"10\" w=\"200\" h=\"200\" tab_width=\"2\">\n<scroll_bar_d name=\"scroll_bar\" x=\"r\" y=\"0\" w=\"14\" h=\"100%\" value=\"0\"/>\n</code_edit>\n```\n\n可用通过style来设置控件的显示风格，如字体的大小和颜色等等。如：\n\n```xml\n<!-- style -->\n<code_edit>\n<style name=\"default\" border_color=\"black\" font_size=\"18\">\n<normal text_color=\"black\" />\n</style>\n</code_edit>\n```",
    "name": "code_edit_t",
    "parent": "widget_t",
    "annotation": {
      "scriptable": true,
      "design": true,
      "widget": true
    },
    "level": 2
  }
]